version: '3.8'

services:
  db:
    container_name: ${PROJECT_NAME}-db
    hostname: ${MYSQL_CONTAINER_HOSTNAME}
    build:
      context: ./db
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    platform: linux/amd64
    image: ${PROJECT_NAME}-db
    restart: always
    env_file:
      - .env.common
      - .env.mysql.development
#    environment:
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#      TZ: 'Asia/Tokyo'
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - mysql-data:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d

  phpmyadmin:
    container_name: ${PROJECT_NAME}-pma
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    environment:
      PMA_ARBITRARY: '1'
      PMA_HOSTS: ${MYSQL_CONTAINER_HOSTNAME}
    ports:
      - ${PMA_PORT}:80
    volumes:
      - pma-data:/sessions

  api:
    tty: true
    container_name: ${PROJECT_NAME}-api
    build:
      context: ./api
      args:
        RUBY_VERSION: ${RUBY_VERSION}
    image: ${PROJECT_NAME}-api
    depends_on:
      - db
    command: bash -c "rm -f /myapi/tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    env_file:
      - .env.common
      - .env.mysql.development
    environment:
      MYSQL_CONTAINER_HOSTNAME: ${MYSQL_CONTAINER_HOSTNAME}
    ports:
      - "${RAILS_PORT}:3000"
    volumes:
      - ./api/src:/myapi
    stdin_open: true
    tty: true

volumes:
  mysql-data:
  pma-data:
